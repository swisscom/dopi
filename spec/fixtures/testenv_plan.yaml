# This dop plan will setup the test environment for DOPi
#
# For now we will just use a bermetal type and vagrant
# this should one day be replaced with dopv and some
# local endpoint to create the machines.
#

name: 'build_dop_test_environment'
max_in_flight: -1

include: 'test_infrastructure.yaml'
include: 'test_nodes.yaml'
include: 'test_credentials.yaml'
include: 'test_configuration.yaml'

steps:
  - name: 'Configure ssh credentials and wait until all the linux machines are online'
    nodes_by_config: {os: 'linux'}
    set_plugin_defaults: [{plugins: '/^ssh/', credentials: 'linux_login'}]
    command: 'ssh/wait_for_login'

  - name: 'Configure winrm credentials and wait until all the windows machines are online'
    nodes_by_config: {os: 'windows'}
    set_plugin_defaults: [{plugins: '/^winrm/', credentials: 'windows_login'}]
    command: 'winrm/wait_for_login'

  - name: 'install the puppetlabs repository'
    nodes_by_config: {os: 'linux'}
    command:
      verify_commands:
        - plugin: 'ssh/file_exists'
          file: '/etc/yum.repos.d/puppetlabs.repo'
      plugin: 'ssh/custom'
      exec: 'rpm'
      arguments: '-ivh https://yum.puppetlabs.com/puppetlabs-release-el-7.noarch.rpm'

  - name: 'install puppet on all the linux nodes'
    nodes_by_config: {os: 'linux'}
    command:
      verify_commands:
        - plugin: 'ssh/file_exists'
          file: '/usr/bin/puppet'
      plugin: 'ssh/custom'
      exec: 'yum'
      arguments: 'install -y puppet'

  - name: 'install puppet on all the linux nodes'
    nodes_by_config: {os: 'linux'}
    command:
      verify_commands:
        - plugin: 'ssh/file_exists'
          file: '/usr/bin/puppet'
      plugin: 'ssh/custom'
      exec: 'yum'
      arguments: 'install -y puppet'

  - name: 'Install chocolatey on all the windows nodes'
    nodes_by_config: {os: 'windows'}
    command:
      verify_commands:
        - title:  'Check if chocolatey is installed'
          plugin: 'winrm/powershell'
          exec:   'choco -?'
      plugin: 'winrm/powershell'
      exec: |
        $Policy = Get-ExecutionPolicy
        If ($Policy -eq "Restricted") {
          Set-ExecutionPolicy AllSigned
        }
        iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))

  - name: 'Install puppet on all the windows nodes'
    nodes_by_config: {os: 'windows'}
    command:
      verify_commands:
        - title:  'Check if puppet is installed'
          plugin: 'winrm/powershell'
          exec:   'puppet help'
      plugin: 'winrm/powershell'
      exec:   'choco install -y puppet'

  - name: 'copy the puppet configuration to the right place'
    roles: 'puppetmaster'
    command:
      plugin: 'ssh/custom'
      exec: 'cp'
      arguments: '-r /vagrant/spec/fixtures/puppet/* /etc/puppet/'

  - name: 'Install all the needed packages on the puppetmaster'
    roles: 'puppetmaster'
    command:
      verify_commands:
        - plugin: 'ssh/file_exists'
          file: '/usr/bin/rake'
        - plugin: 'ssh/file_exists'
          file: '/usr/bin/bundle'
        - plugin: 'ssh/file_exists'
          file: '/usr/bin/git'
        - plugin: 'ssh/file_exists'
          file: '/usr/include/ruby.h'
      plugin: 'ssh/custom'
      exec: 'yum'
      arguments: 'install -y rubygem-rake rubygem-bundler git ruby-devel'

  - name: 'Install librarian-puppet'
    roles: 'puppetmaster'
    command:
      verify_commands:
        - plugin: 'ssh/file_exists'
          file: '/usr/local/bin/librarian-puppet'
      plugin: 'ssh/custom'
      exec: 'gem'
      arguments: 'install librarian-puppet'

  - name: 'Install all the puppet modules'
    roles: 'puppetmaster'
    command:
      verify_commands:
        - plugin: 'ssh/file_exists'
          file: '/etc/puppet/.librarian/puppet/config'
      plugin: 'ssh/custom'
      exec: 'librarian-puppet'
      arguments: 'install'
      env: {LIBRARIAN_PUPPET_PUPPETFILE: '/etc/puppet/Puppetfile'}

  - name: 'Install dop_common for the puppetmaster'
    roles: 'puppetmaster'
    command:
      verify_commands:
        - plugin: 'ssh/custom'
          exec: 'gem list | grep dop_common'
      plugin: 'ssh/custom'
      exec: 'gem install dop_common'

  - name: 'Install DOPi so we can add the plan'
    roles: 'puppetmaster'
    command:
      verify_commands:
        - plugin: 'ssh/file_exists'
          file: '/vagrant/.bundle/config'
      plugin: 'ssh/custom'
      exec: 'bundle'
      arguments: 'install --local'
      env: {BUNDLE_GEMFILE: '/vagrant/Gemfile'}

  - name: 'Add deployment plan with hiera data to the plan cache'
    roles: 'puppetmaster'
    command:
      verify_commands:
        - plugin: 'ssh/file_exists'
          file: '/var/lib/dop/cache/build_dop_test_environment/dopi.yaml'
      plugin: 'ssh/custom'
      exec: 'bundle'
      arguments: 'exec dopi add /vagrant/spec/fixtures/testenv_plan.yaml'
      env: {BUNDLE_GEMFILE: '/vagrant/Gemfile'}

  - name: 'Run puppet on puppetmaster'
    roles: 'puppetmaster'
    command:
      verify_commands:
        - plugin: 'ssh/file_exists'
          file: '/etc/httpd/conf.d/25-puppet.conf'
      plugin: 'ssh/custom'
      exec: 'puppet'
      arguments: 'apply /etc/puppet/manifests/site.pp'

  - name: 'Add puppetmaster to all hosts files on linux'
    nodes_by_config: {os: 'linux'}
    command:
      verify_commands:
        - plugin: 'ssh/file_contains'
          file: '/etc/hosts'
          pattern: 'puppetmaster.example.com'
      plugin: 'ssh/custom'
      exec: "echo"
      arguments: '"192.168.56.101 puppetmaster.example.com puppetmaster" >> /etc/hosts'

  - name: 'Add puppetmaster to all hosts files on windows'
    nodes_by_config: {os: 'windows'}
    command:
      verify_commands:
        - plugin: 'winrm/file_contains'
          file: 'C:\Windows\System32\Drivers\etc\hosts'
          pattern: 'puppetmaster.example.com'
      plugin: 'winrm/powershell'
      exec: "Add-Content"
      arguments:
        - 'C:\Windows\System32\Drivers\etc\hosts'
        - '"`n192.168.56.101 puppetmaster.example.com puppetmaster"'

  - name: 'Add broker to all hosts files'
    nodes_by_config: {os: 'linux'}
    command:
      verify_commands:
        - plugin: 'ssh/file_contains'
          file: '/etc/hosts'
          pattern: 'broker.example.com'
      plugin: 'ssh/custom'
      exec: "echo"
      arguments: '"192.168.56.102 broker.example.com broker" >> /etc/hosts'

  - name: 'Run puppet on the rest of the linux nodes'
    nodes_by_config: {os: 'linux'}
    exclude_roles: 'puppetmaster'
    command:
      plugin: 'ssh/puppet_agent_run'
      arguments: '--server puppetmaster.example.com'

# There is an issue with the domain name which gets not set
# by Vagrant
#  - name: "run puppet on the windows nodes"
#    nodes_by_config: {os: 'windows'}
#    command:
#      - plugin: 'winrm/puppet_agent_run'
#        arguments: '--server puppetmaster.example.com'
#        rerun_on_change: true
#        rerun_on_error: true
#        max_rerun: 3
